{"ast":null,"code":"var _jsxFileName = \"C:\\\\selerro-app\\\\selerro\\\\client\\\\src\\\\components\\\\collections-overview\\\\collections-overview.component.jsx\";\nimport React, { useState } from 'react';\nimport './collections-overview.styles.scss';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPreview from '../collection-preview/collection-preview.component.jsx';\nimport { selectShopCollectionsForPreview } from '../../redux/shop/shop.selectors.js';\n\nconst CollectionsOverview = ({\n  collections\n}) => {\n  const [searchField, setSearchField] = useState('');\n\n  const handleChange = e => setSearchField(e.target.value);\n\n  const filteredItems = shopData.filter(item => item.name.toLowerCase().includes(searchField.toLowerCase()));\n  return React.createElement(\"div\", {\n    className: \"collections-overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    autoComplete: \"off\",\n    spellCheck: \"false\",\n    value: searchField,\n    name: \"searchField\",\n    onChange: handleChange,\n    placeholder: \"Search Items...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), collections.map(({\n    id,\n    ...otherCollectionPreviewProps\n  }) => React.createElement(CollectionPreview, Object.assign({\n    key: id\n  }, otherCollectionPreviewProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectShopCollectionsForPreview\n});\nexport default connect(mapStateToProps)(CollectionsOverview);","map":{"version":3,"sources":["C:/selerro-app/selerro/client/src/components/collections-overview/collections-overview.component.jsx"],"names":["React","useState","connect","createStructuredSelector","CollectionPreview","selectShopCollectionsForPreview","CollectionsOverview","collections","searchField","setSearchField","handleChange","e","target","value","filteredItems","shopData","filter","item","name","toLowerCase","includes","map","id","otherCollectionPreviewProps","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,iBAAP,MAA8B,wDAA9B;AACA,SAASC,+BAAT,QAAgD,oCAAhD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC/C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMS,YAAY,GAAIC,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;;AACA,QAAMC,aAAa,GAAGC,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IACpCA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCZ,WAAW,CAACW,WAAZ,EAAjC,CADoB,CAAtB;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,YAAY,EAAC,KAFf;AAGE,IAAA,UAAU,EAAC,OAHb;AAIE,IAAA,KAAK,EAAEX,WAJT;AAKE,IAAA,IAAI,EAAC,aALP;AAME,IAAA,QAAQ,EAAEE,YANZ;AAOE,IAAA,WAAW,EAAC,iBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUGH,WAAW,CAACc,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,EAAF;AAAM,OAAGC;AAAT,GAAD,KACf,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAED;AAAxB,KAAgCC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CAVH,CADF;AAgBD,CAvBD;;AAyBA,MAAMC,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CI,EAAAA,WAAW,EAAEF;AADkC,CAAD,CAAhD;AAIA,eAAeH,OAAO,CAACsB,eAAD,CAAP,CAAyBlB,mBAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './collections-overview.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport CollectionPreview from '../collection-preview/collection-preview.component.jsx';\r\nimport { selectShopCollectionsForPreview } from '../../redux/shop/shop.selectors.js';\r\n\r\nconst CollectionsOverview = ({ collections }) => {\r\n  const [searchField, setSearchField] = useState('');\r\n  const handleChange = (e) => setSearchField(e.target.value);\r\n  const filteredItems = shopData.filter((item) =>\r\n    item.name.toLowerCase().includes(searchField.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className='collections-overview'>\r\n      <input\r\n        type='search'\r\n        autoComplete='off'\r\n        spellCheck='false'\r\n        value={searchField}\r\n        name='searchField'\r\n        onChange={handleChange}\r\n        placeholder='Search Items...'\r\n      />\r\n      {collections.map(({ id, ...otherCollectionPreviewProps }) => (\r\n        <CollectionPreview key={id} {...otherCollectionPreviewProps} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectShopCollectionsForPreview,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n"]},"metadata":{},"sourceType":"module"}