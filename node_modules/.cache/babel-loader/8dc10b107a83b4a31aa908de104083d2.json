{"ast":null,"code":"var _jsxFileName = \"C:\\\\selerro-app\\\\selerro\\\\client\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport React, { useContext, useCallback } from \"react\";\nimport \"./cart-icon.styles.scss\";\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport { CartContext } from \"../../providers/cart/cart.provider.jsx\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\n\nconst CartIcon = ({\n  cartItemsCount,\n  toggleCartHidden\n}) => {\n  // const { toggleHidden, cartItemsCount } = useContext(CartContext);\n  return React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: useCallback(() => toggleCartHidden(), [toggleCartHidden]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, cartItemsCount));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItemsCount: selectCartItemsCount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["C:/selerro-app/selerro/client/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","useContext","useCallback","CartContext","connect","createStructuredSelector","toggleCartHidden","selectCartItemsCount","CartIcon","cartItemsCount","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA,OAAO,yBAAP;;AAEA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBH,EAAAA;AAAlB,CAAD,KAA0C;AACzD;AACA,SACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,OAAO,EAAEJ,WAAW,CAAC,MAAMI,gBAAgB,EAAvB,EAA2B,CAACA,gBAAD,CAA3B,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,cAA9B,CALF,CADF;AASD,CAXD;;AAaA,MAAMC,eAAe,GAAGL,wBAAwB,CAAC;AAC/CI,EAAAA,cAAc,EAAEF;AAD+B,CAAD,CAAhD;;AAIA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCN,EAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACN,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACM,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,QAA7C,CAAf","sourcesContent":["import React, { useContext, useCallback } from \"react\";\r\nimport \"./cart-icon.styles.scss\";\r\nimport { ReactComponent as ShoppingIcon } from \"../../assets/shopping-bag.svg\";\r\nimport { CartContext } from \"../../providers/cart/cart.provider.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\r\n\r\nconst CartIcon = ({ cartItemsCount, toggleCartHidden }) => {\r\n  // const { toggleHidden, cartItemsCount } = useContext(CartContext);\r\n  return (\r\n    <div\r\n      className=\"cart-icon\"\r\n      onClick={useCallback(() => toggleCartHidden(), [toggleCartHidden])}\r\n    >\r\n      <ShoppingIcon className=\"shopping-icon\" />\r\n      <span className=\"item-count\">{cartItemsCount}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItemsCount: selectCartItemsCount\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\r\n"]},"metadata":{},"sourceType":"module"}