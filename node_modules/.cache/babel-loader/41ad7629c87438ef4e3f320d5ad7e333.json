{"ast":null,"code":"var _jsxFileName = \"C:\\\\selerro-app\\\\selerro\\\\client\\\\src\\\\providers\\\\cart\\\\cart.provider.jsx\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport { removeItemFromCart, addItemToCart, filterItemFromCart, getCartItemsCount, getCartItemsTotal } from '../../redux/cart/cart.utils.js';\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => {},\n  cartItems: [],\n  addItem: () => {},\n  removeItem: () => {},\n  clearItemFromCart: () => {},\n  cartItemsCount: 0,\n  cartItemsTotal: 0\n});\nexport const CartProvider = ({\n  children\n}) => {\n  const [hidden, setHidden] = useState(true);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [cartItemsTotal, setCartItemsTotal] = useState(0);\n\n  const toggleHidden = () => setHidden(!hidden);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n\n  const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item));\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    setCartItemsTotal(getCartItemsTotal(cartItems));\n  }, [cartItems]);\n  return React.createElement(CartContext.Provider, {\n    value: {\n      hidden,\n      toggleHidden,\n      cartItems,\n      addItem,\n      removeItem,\n      clearItemFromCart,\n      cartItemsCount,\n      cartItemsTotal\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["C:/selerro-app/selerro/client/src/providers/cart/cart.provider.jsx"],"names":["React","useState","useEffect","createContext","removeItemFromCart","addItemToCart","filterItemFromCart","getCartItemsCount","getCartItemsTotal","CartContext","hidden","toggleHidden","cartItems","addItem","removeItem","clearItemFromCart","cartItemsCount","cartItemsTotal","CartProvider","children","setHidden","setCartItems","setCartItemsCount","setCartItemsTotal","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SACEC,kBADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,iBALF,QAMO,gCANP;AAQA,OAAO,MAAMC,WAAW,GAAGN,aAAa,CAAC;AACvCO,EAAAA,MAAM,EAAE,IAD+B;AAEvCC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAFiB;AAGvCC,EAAAA,SAAS,EAAE,EAH4B;AAIvCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAJsB;AAKvCC,EAAAA,UAAU,EAAE,MAAM,CAAE,CALmB;AAMvCC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CANY;AAOvCC,EAAAA,cAAc,EAAE,CAPuB;AAQvCC,EAAAA,cAAc,EAAE;AARuB,CAAD,CAAjC;AAWP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACT,MAAD,EAASU,SAAT,IAAsBnB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYS,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,cAAD,EAAiBM,iBAAjB,IAAsCrB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACgB,cAAD,EAAiBM,iBAAjB,IAAsCtB,QAAQ,CAAC,CAAD,CAApD;;AAEA,QAAMU,YAAY,GAAG,MAAMS,SAAS,CAAC,CAACV,MAAF,CAApC;;AACA,QAAMG,OAAO,GAAGW,IAAI,IAAIH,YAAY,CAAChB,aAAa,CAACO,SAAD,EAAYY,IAAZ,CAAd,CAApC;;AACA,QAAMV,UAAU,GAAGU,IAAI,IAAIH,YAAY,CAACjB,kBAAkB,CAACQ,SAAD,EAAYY,IAAZ,CAAnB,CAAvC;;AACA,QAAMT,iBAAiB,GAAGS,IAAI,IAC5BH,YAAY,CAACf,kBAAkB,CAACM,SAAD,EAAYY,IAAZ,CAAnB,CADd;;AAGAtB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,iBAAiB,CAACf,iBAAiB,CAACK,SAAD,CAAlB,CAAjB;AACAW,IAAAA,iBAAiB,CAACf,iBAAiB,CAACI,SAAD,CAAlB,CAAjB;AACD,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,MADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,SAHK;AAILC,MAAAA,OAJK;AAKLC,MAAAA,UALK;AAMLC,MAAAA,iBANK;AAOLC,MAAAA,cAPK;AAQLC,MAAAA;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGE,QAZH,CADF;AAgBD,CAjCM","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\r\nimport {\r\n  removeItemFromCart,\r\n  addItemToCart,\r\n  filterItemFromCart,\r\n  getCartItemsCount,\r\n  getCartItemsTotal,\r\n} from '../../redux/cart/cart.utils.js';\r\n\r\nexport const CartContext = createContext({\r\n  hidden: true,\r\n  toggleHidden: () => {},\r\n  cartItems: [],\r\n  addItem: () => {},\r\n  removeItem: () => {},\r\n  clearItemFromCart: () => {},\r\n  cartItemsCount: 0,\r\n  cartItemsTotal: 0,\r\n});\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartItemsCount, setCartItemsCount] = useState(0);\r\n  const [cartItemsTotal, setCartItemsTotal] = useState(0);\r\n\r\n  const toggleHidden = () => setHidden(!hidden);\r\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\r\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\r\n  const clearItemFromCart = item =>\r\n    setCartItems(filterItemFromCart(cartItems, item));\r\n\r\n  useEffect(() => {\r\n    setCartItemsCount(getCartItemsCount(cartItems));\r\n    setCartItemsTotal(getCartItemsTotal(cartItems));\r\n  }, [cartItems]);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        hidden,\r\n        toggleHidden,\r\n        cartItems,\r\n        addItem,\r\n        removeItem,\r\n        clearItemFromCart,\r\n        cartItemsCount,\r\n        cartItemsTotal,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}