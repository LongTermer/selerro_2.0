{"ast":null,"code":"var _jsxFileName = \"C:\\\\selerro-app\\\\selerro\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport \"./sign-in.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport GoogleButton from \"react-google-button\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions.js\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userInfo, setUserInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userInfo;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo({ ...userInfo,\n      [name]: value\n    });\n  };\n\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 700px)\"\n  });\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    spellCheck: \"false\",\n    autoComplete: \"off\",\n    name: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    spellCheck: \"false\",\n    autoComplete: \"off\",\n    name: \"password\",\n    label: \"Password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"custom-button sign-in-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"SIGN IN\"), isMobile ? React.createElement(\"span\", {\n    style: {\n      // MOBILE STYLES\n      display: \"inline-block\",\n      marginLeft: \"25px\",\n      paddingTop: \"10px\",\n      position: \"relative\",\n      bottom: \"2.5px\",\n      fontSize: \"1.15rem\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"OR\") : React.createElement(\"span\", {\n    style: {\n      display: \"inline-block\",\n      marginLeft: \"25px\",\n      paddingTop: \"10px\",\n      position: \"relative\",\n      bottom: \"2.5px\",\n      fontSize: \"1.15rem\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"OR\"), React.createElement(\"div\", {\n    style: {\n      display: \"inline-block\",\n      marginLeft: \"25px\",\n      paddingTop: \"10px\",\n      position: \"relative\",\n      bottom: \"9px\",\n      borderRadius: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, isMobile ? React.createElement(GoogleButton, {\n    className: \"google-button\",\n    type: \"dark\",\n    label: \"Sign in with Google\",\n    onClick: googleSignInStart,\n    style: {\n      // MOBILE STYLES\n      width: \"190px\",\n      fontSize: \"15px\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }) : React.createElement(GoogleButton, {\n    className: \"google-button\",\n    type: \"dark\",\n    label: \"Sign in with Google\",\n    onClick: googleSignInStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/selerro-app/selerro/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","GoogleButton","connect","googleSignInStart","emailSignInStart","useMediaQuery","SignIn","userInfo","setUserInfo","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","isMobile","query","display","flexDirection","marginLeft","paddingTop","position","bottom","fontSize","fontWeight","borderRadius","width","color","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from \"react\";\r\nimport \"./sign-in.styles.scss\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart\r\n} from \"../../redux/user/user.actions.js\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = userInfo;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserInfo({ ...userInfo, [name]: value });\r\n  };\r\n\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 700px)\" });\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2 className=\"title\">I already have an account</h2>\r\n      <span>Sign in with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"email\"\r\n          spellCheck=\"false\"\r\n          autoComplete=\"off\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={email}\r\n          handleChange={handleChange}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          spellCheck=\"false\"\r\n          autoComplete=\"off\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          value={password}\r\n          handleChange={handleChange}\r\n          required\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\"\r\n          }}\r\n        >\r\n          <button type=\"submit\" className=\"custom-button sign-in-button\">\r\n            SIGN IN\r\n          </button>\r\n          {isMobile ? (\r\n            <span\r\n              style={{\r\n                // MOBILE STYLES\r\n                display: \"inline-block\",\r\n                marginLeft: \"25px\",\r\n                paddingTop: \"10px\",\r\n                position: \"relative\",\r\n                bottom: \"2.5px\",\r\n                fontSize: \"1.15rem\",\r\n                fontWeight: \"bold\"\r\n              }}\r\n            >\r\n              OR\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                marginLeft: \"25px\",\r\n                paddingTop: \"10px\",\r\n                position: \"relative\",\r\n                bottom: \"2.5px\",\r\n                fontSize: \"1.15rem\",\r\n                fontWeight: \"bold\"\r\n              }}\r\n            >\r\n              OR\r\n            </span>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              marginLeft: \"25px\",\r\n              paddingTop: \"10px\",\r\n              position: \"relative\",\r\n              bottom: \"9px\",\r\n              borderRadius: \"5px\"\r\n            }}\r\n          >\r\n            {isMobile ? (\r\n              <GoogleButton\r\n                className=\"google-button\"\r\n                type=\"dark\"\r\n                label=\"Sign in with Google\"\r\n                onClick={googleSignInStart}\r\n                style={{\r\n                  // MOBILE STYLES\r\n                  width: \"190px\",\r\n                  fontSize: \"15px\",\r\n                  color: \"#fff\"\r\n                }}\r\n              />\r\n            ) : (\r\n              <GoogleButton\r\n                className=\"google-button\"\r\n                type=\"dark\"\r\n                label=\"Sign in with Google\"\r\n                onClick={googleSignInStart}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}