{"ast":null,"code":"var _jsxFileName = \"C:\\\\Selerro\\\\selerro\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport * as logo from '../../assets/selerro-big-logo.png';\nimport axios from 'axios';\nimport { selectCartItems } from '../../redux/cart/cart.selectors.js';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nexport const onToken = token => {\n  axios({\n    url: 'payment',\n    method: 'post',\n    data: {\n      amount: priceForStripe,\n      token\n    }\n  }).then(response => {\n    alert('Your Payment was Successful!', `Response: ${response}`);\n  }).catch(error => {\n    alert(\"There was an error when processing your payment. Please make sure you are using the provided Visa or Mastercard test credit cards and that your cart isn't empty!\");\n    console.log(`Payment error: ${JSON.parse(error)}`);\n  });\n};\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_R7vs6Pv7FSS5SMKX2LkBCzhI007HeaYZo4';\n  return React.createElement(StripeCheckout, {\n    className: \"custom-button\",\n    billingAddress: true,\n    shippingAddress: true,\n    label: \"Buy Now\",\n    name: \"Stripe Electronics, Inc.\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Buy Now\",\n    image: logo,\n    token: () => {},\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default connect(mapStateToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["C:/Selerro/selerro/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","logo","axios","selectCartItems","connect","createStructuredSelector","onToken","token","url","method","data","amount","priceForStripe","then","response","alert","catch","error","console","log","JSON","parse","StripeCheckoutButton","price","publishableKey","mapStateToProps","cartItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,mCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAChCL,EAAAA,KAAK,CAAC;AACJM,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEC,cADJ;AAEJL,MAAAA;AAFI;AAHF,GAAD,CAAL,CAQGM,IARH,CAQSC,QAAD,IAAc;AAClBC,IAAAA,KAAK,CAAC,8BAAD,EAAkC,aAAYD,QAAS,EAAvD,CAAL;AACD,GAVH,EAWGE,KAXH,CAWUC,KAAD,IAAW;AAChBF,IAAAA,KAAK,CACH,mKADG,CAAL;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAkB,EAAhD;AACD,GAhBH;AAiBD,CAlBM;;AAoBP,MAAMK,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMX,cAAc,GAAGW,KAAK,GAAG,GAA/B;AACA,QAAMC,cAAc,GAAG,4CAAvB;AAEA,SACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,eAAe,MAHjB;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,IAAI,EAAC,0BALP;AAME,IAAA,WAAW,EAAG,kBAAiBD,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEX,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEX,IATT;AAUE,IAAA,KAAK,EAAE,MAAM,CAAE,CAVjB;AAWE,IAAA,SAAS,EAAEuB,cAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD,CAnBD;;AAqBA,MAAMC,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CqB,EAAAA,SAAS,EAAEvB;AADoC,CAAD,CAAhD;AAIA,eAAeC,OAAO,CAACqB,eAAD,CAAP,CAAyBH,oBAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport * as logo from '../../assets/selerro-big-logo.png';\r\nimport axios from 'axios';\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors.js';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nexport const onToken = (token) => {\r\n  axios({\r\n    url: 'payment',\r\n    method: 'post',\r\n    data: {\r\n      amount: priceForStripe,\r\n      token,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      alert('Your Payment was Successful!', `Response: ${response}`);\r\n    })\r\n    .catch((error) => {\r\n      alert(\r\n        \"There was an error when processing your payment. Please make sure you are using the provided Visa or Mastercard test credit cards and that your cart isn't empty!\"\r\n      );\r\n      console.log(`Payment error: ${JSON.parse(error)}`);\r\n    });\r\n};\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_R7vs6Pv7FSS5SMKX2LkBCzhI007HeaYZo4';\r\n\r\n  return (\r\n    <StripeCheckout\r\n      className='custom-button'\r\n      billingAddress\r\n      shippingAddress\r\n      label='Buy Now'\r\n      name='Stripe Electronics, Inc.'\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel='Buy Now'\r\n      image={logo}\r\n      token={() => {}}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nexport default connect(mapStateToProps)(StripeCheckoutButton);\r\n"]},"metadata":{},"sourceType":"module"}