{"ast":null,"code":"var _jsxFileName = \"C:\\\\Selerro\\\\selerro_2.0\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React, { useContext, useCallback } from 'react';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\nimport CartItem from '../cart-tem/cart-item.component.jsx';\nimport { withRouter } from 'react-router-dom';\nimport { CartContext } from '../../providers/cart/cart.provider.jsx';\nimport { useMediaQuery } from 'react-responsive';\n\nconst CartDropdown = ({\n  history\n}) => {\n  const {\n    cartItems,\n    toggleHidden\n  } = useContext(CartContext);\n  const handleClick = useCallback(() => {\n    history.push('/checkout');\n    toggleHidden();\n  }, [history, toggleHidden]);\n  const isMobile = useMediaQuery({\n    query: '(max-width: 800px)'\n  });\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Your Cart is Empty\")), isMobile ? React.createElement(CustomButton, {\n    onClick: handleClick,\n    style: {\n      position: 'relative',\n      bottom: '7.5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\") : React.createElement(CustomButton, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n};\n\nexport default withRouter(CartDropdown);","map":{"version":3,"sources":["C:/Selerro/selerro_2.0/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","useContext","useCallback","CustomButton","CartItem","withRouter","CartContext","useMediaQuery","CartDropdown","history","cartItems","toggleHidden","handleClick","push","isMobile","query","length","map","cartItem","id","position","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACpC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BV,UAAU,CAACK,WAAD,CAA9C;AAEA,QAAMM,WAAW,GAAGV,WAAW,CAAC,MAAM;AACpCO,IAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AACAF,IAAAA,YAAY;AACb,GAH8B,EAG5B,CAACF,OAAD,EAAUE,YAAV,CAH4B,CAA/B;AAKA,QAAMG,QAAQ,GAAGP,aAAa,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,CAACM,MAAV,GACCN,SAAS,CAACO,GAAV,CAAeC,QAAD,IACZ,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,CADF,EAUGJ,QAAQ,GACP,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEF,WADX;AAEE,IAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,MAAM,EAAE;AAFH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADO,GAWP,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAET,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBJ,CADF;AA0BD,CApCD;;AAsCA,eAAeP,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import React, { useContext, useCallback } from 'react';\r\nimport './cart-dropdown.styles.scss';\r\nimport CustomButton from '../custom-button/custom-button.component.jsx';\r\nimport CartItem from '../cart-tem/cart-item.component.jsx';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CartContext } from '../../providers/cart/cart.provider.jsx';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst CartDropdown = ({ history }) => {\r\n  const { cartItems, toggleHidden } = useContext(CartContext);\r\n\r\n  const handleClick = useCallback(() => {\r\n    history.push('/checkout');\r\n    toggleHidden();\r\n  }, [history, toggleHidden]);\r\n\r\n  const isMobile = useMediaQuery({ query: '(max-width: 800px)' });\r\n\r\n  return (\r\n    <div className='cart-dropdown'>\r\n      <div className='cart-items'>\r\n        {cartItems.length ? (\r\n          cartItems.map((cartItem) => (\r\n            <CartItem key={cartItem.id} item={cartItem} />\r\n          ))\r\n        ) : (\r\n          <span className='empty-message'>Your Cart is Empty</span>\r\n        )}\r\n      </div>\r\n      {isMobile ? (\r\n        <CustomButton\r\n          onClick={handleClick}\r\n          style={{\r\n            position: 'relative',\r\n            bottom: '7.5px',\r\n          }}\r\n        >\r\n          GO TO CHECKOUT\r\n        </CustomButton>\r\n      ) : (\r\n        <CustomButton onClick={handleClick}>GO TO CHECKOUT</CustomButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CartDropdown);\r\n"]},"metadata":{},"sourceType":"module"}