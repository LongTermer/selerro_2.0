{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './root-reducer.js';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga.js';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst initialState = {};\nexport const store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Selerro/selerro_2.0/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","rootReducer","persistStore","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","initialState","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,MAAME,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,KAAK,GAAGV,WAAW,CAC9BG,WAD8B,EAE9BM,YAF8B,EAG9BP,mBAAmB,CAACD,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CAHW,CAAzB;AAMPD,cAAc,CAACI,GAAf,CAAmBL,QAAnB;AAEA,OAAO,MAAMM,SAAS,GAAGR,YAAY,CAACM,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './root-reducer.js';\r\nimport { persistStore } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root-saga.js';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}