{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nexport const filterItemFromCart = (cartItems, item) => cartItems.filter(cartItem => cartItem.id !== item.id);\nexport const getCartItemsCount = cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0);\nexport const getCartItemsTotal = cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0);","map":{"version":3,"sources":["C:/Selerro/selerro_2.0/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter","filterItemFromCart","item","getCartItemsCount","reduce","accumulatedQuantity","getCartItemsTotal","price"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AACjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADtB,CAAzB;;AAIA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACD;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACI,EAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADJ,GAEIH,QAHC,CAAP;AAKD,CAdM;AAgBP,OAAO,MAAMO,kBAAkB,GAAG,CAACX,SAAD,EAAYY,IAAZ,KAChCZ,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBO,IAAI,CAACP,EAAlD,CADK;AAGP,OAAO,MAAMQ,iBAAiB,GAAGb,SAAS,IACxCA,SAAS,CAACc,MAAV,CACE,CAACC,mBAAD,EAAsBX,QAAtB,KAAmCW,mBAAmB,GAAGX,QAAQ,CAACG,QADpE,EAEE,CAFF,CADK;AAMP,OAAO,MAAMS,iBAAiB,GAAGhB,SAAS,IACxCA,SAAS,CAACc,MAAV,CACE,CAACC,mBAAD,EAAsBX,QAAtB,KACEW,mBAAmB,GAAGX,QAAQ,CAACG,QAAT,GAAoBH,QAAQ,CAACa,KAFvD,EAGE,CAHF,CADK","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  const existingCartItem = cartItems.find(\r\n    cartItem => cartItem.id === cartItemToAdd.id\r\n  );\r\n\r\n  if (existingCartItem) {\r\n    return cartItems.map(cartItem =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n  const existingCartItem = cartItems.find(\r\n    cartItem => cartItem.id === cartItemToRemove.id\r\n  );\r\n\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\r\n  }\r\n\r\n  return cartItems.map(cartItem =>\r\n    cartItem.id === cartItemToRemove.id\r\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n      : cartItem\r\n  );\r\n};\r\n\r\nexport const filterItemFromCart = (cartItems, item) =>\r\n  cartItems.filter(cartItem => cartItem.id !== item.id);\r\n\r\nexport const getCartItemsCount = cartItems =>\r\n  cartItems.reduce(\r\n    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity,\r\n    0\r\n  );\r\n\r\nexport const getCartItemsTotal = cartItems =>\r\n  cartItems.reduce(\r\n    (accumulatedQuantity, cartItem) =>\r\n      accumulatedQuantity + cartItem.quantity * cartItem.price,\r\n    0\r\n  );\r\n"]},"metadata":{},"sourceType":"module"}