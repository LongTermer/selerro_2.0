{"ast":null,"code":"var _jsxFileName = \"C:\\\\Selerro\\\\selerro\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport * as logo from \"../../assets/selerro-big-logo.png\";\nimport axios from \"axios\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors.js\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { clearCart } from \"../../redux/cart/cart.actions.js\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearCart,\n  cartItems\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_R7vs6Pv7FSS5SMKX2LkBCzhI007HeaYZo4\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert(\"Your Payment was Successful!\");\n    }).catch(error => {\n      alert(\"There was an error when processing your payment. Please make sure you are using the provided Visa or Mastercard test credit cards and that your cart isn't empty!\");\n      console.log(\"Payment error: \", JSON.parse(error));\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    className: \"custom-button\",\n    billingAddress: true,\n    shippingAddress: true,\n    bitcoin: true,\n    label: \"Buy Now\",\n    name: \"Stripe Electronics, Inc.\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Buy Now\",\n    image: logo,\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["C:/Selerro/selerro/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","logo","axios","selectCartItems","connect","createStructuredSelector","clearCart","StripeCheckoutButton","price","cartItems","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,mCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,SAAT,QAA0B,kCAA1B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,SAAT;AAAoBG,EAAAA;AAApB,CAAD,KAAqC;AAChE,QAAMC,cAAc,GAAGF,KAAK,GAAG,GAA/B;AACA,QAAMG,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBX,IAAAA,KAAK,CAAC;AACJY,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQSC,QAAD,IAAc;AAClBC,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,KAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBF,MAAAA,KAAK,CACH,mKADG,CAAL;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACD,KAhBH;AAiBD,GAlBD;;AAoBA,SACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,eAAe,MAHjB;AAIE,IAAA,OAAO,MAJT;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,IAAI,EAAC,0BANP;AAOE,IAAA,WAAW,EAAG,kBAAiBd,KAAM,EAPvC;AAQE,IAAA,MAAM,EAAEE,cARV;AASE,IAAA,UAAU,EAAC,SATb;AAUE,IAAA,KAAK,EAAET,IAVT;AAWE,IAAA,KAAK,EAAEW,OAXT;AAYE,IAAA,SAAS,EAAED,cAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD,CAxCD;;AA0CA,MAAMgB,eAAe,GAAGtB,wBAAwB,CAAC;AAC/CI,EAAAA,SAAS,EAAEN;AADoC,CAAD,CAAhD;;AAIA,MAAMyB,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,SAAS,EAAE,MAAMuB,QAAQ,CAACvB,SAAS,EAAV;AADe,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CACpBuB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbrB,oBAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport * as logo from \"../../assets/selerro-big-logo.png\";\r\nimport axios from \"axios\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { clearCart } from \"../../redux/cart/cart.actions.js\";\r\n\r\nconst StripeCheckoutButton = ({ price, clearCart, cartItems }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = \"pk_test_R7vs6Pv7FSS5SMKX2LkBCzhI007HeaYZo4\";\r\n\r\n  const onToken = (token) => {\r\n    axios({\r\n      url: \"payment\",\r\n      method: \"post\",\r\n      data: {\r\n        amount: priceForStripe,\r\n        token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        alert(\"Your Payment was Successful!\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          \"There was an error when processing your payment. Please make sure you are using the provided Visa or Mastercard test credit cards and that your cart isn't empty!\"\r\n        );\r\n        console.log(\"Payment error: \", JSON.parse(error));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      className=\"custom-button\"\r\n      billingAddress\r\n      shippingAddress\r\n      bitcoin\r\n      label=\"Buy Now\"\r\n      name=\"Stripe Electronics, Inc.\"\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel=\"Buy Now\"\r\n      image={logo}\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCart: () => dispatch(clearCart()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StripeCheckoutButton);\r\n"]},"metadata":{},"sourceType":"module"}